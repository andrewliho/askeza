import SwiftUI
import SwiftData

struct WorkshopGridView: View {
    @ObservedObject private var templateStore: PracticeTemplateStore
    @Binding private var searchText: String
    @Binding private var selectedCategory: AskezaCategory?
    @Binding private var selectedDifficulty: Int?
    @Binding private var selectedDuration: Int?
    
    @State private var showingTemplateDetail = false
    @State private var selectedTemplate: PracticeTemplate?
    
    let columns = [
        GridItem(.flexible(), spacing: 12),
        GridItem(.flexible(), spacing: 12)
    ]
    
    init(
        templateStore: PracticeTemplateStore,
        searchText: Binding<String>,
        selectedCategory: Binding<AskezaCategory?>,
        selectedDifficulty: Binding<Int?>,
        selectedDuration: Binding<Int?>
    ) {
        self.templateStore = templateStore
        self._searchText = searchText
        self._selectedCategory = selectedCategory
        self._selectedDifficulty = selectedDifficulty
        self._selectedDuration = selectedDuration
    }
    
    var body: some View {
        VStack(spacing: 0) {
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
            HStack {
                Text(sectionTitle)
                    .font(.headline)
                    .foregroundColor(AskezaTheme.textColor)
                
                Spacer()
                
                if hasActiveFilters {
                    Button(action: clearFilters) {
                        Label("–°–±—Ä–æ—Å–∏—Ç—å", systemImage: "xmark.circle.fill")
                            .font(.footnote)
                            .foregroundColor(AskezaTheme.accentColor)
                    }
                }
            }
            .padding(.horizontal)
            .padding(.vertical, 8)
            
            if templates.isEmpty {
                emptyResultsView
            } else {
                // Grid –≥–∞–ª–µ—Ä–µ—è —à–∞–±–ª–æ–Ω–æ–≤
                ScrollView {
                    LazyVGrid(columns: columns, spacing: 12) {
                        ForEach(templates) { template in
                            OptimizedTemplateGridCard(
                                template: template,
                                progress: templateStore.getProgress(forTemplateID: template.id),
                                onTap: {
                                    print("üîç WorkshopGridView - –í—ã–±—Ä–∞–Ω —à–∞–±–ª–æ–Ω: \(template.title), ID: \(template.templateId), UUID: \(template.id)")
                                    
                                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —à–∞–±–ª–æ–Ω–æ–º "7 –¥–Ω–µ–π —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–µ—Ç–æ–∫—Å–∞"
                                    let isDigitalDetox = template.title.contains("—Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–µ—Ç–æ–∫—Å–∞") || template.title.contains("digital detox")
                                    
                                    // –î–ª—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–µ—Ç–æ–∫—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–≤–µ–ª–∏—á–µ–Ω–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É
                                    let loadDelay = isDigitalDetox ? 0.5 : 0.1
                                    
                                    // –ï—Å–ª–∏ —ç—Ç–æ —à–∞–±–ª–æ–Ω —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–µ—Ç–æ–∫—Å–∞, –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ templateId
                                    let templateIdToLoad = isDigitalDetox ? "digital-detox-7" : template.templateId
                                    
                                    print("WorkshopGridView - –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–∞ \(isDigitalDetox ? "—Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–µ—Ç–æ–∫—Å–∞" : template.title) —Å ID: \(templateIdToLoad)")
                                    
                                    // –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞
                                    templateStore.preloadTemplateData(for: templateIdToLoad)
                                    print("WorkshopGridView - –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞: \(templateIdToLoad)")
                                    
                                    // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏
                                    let templateCopy = isDigitalDetox ? 
                                        PracticeTemplate(
                                            templateId: "digital-detox-7",
                                            title: template.title,
                                            category: template.category,
                                            duration: template.duration,
                                            quote: template.quote,
                                            difficulty: template.difficulty,
                                            description: template.practiceDescription,
                                            intention: template.intention
                                        ) : template
                                    
                                    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω
                                    selectedTemplate = templateCopy
                                    
                                    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º sheet –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
                                    DispatchQueue.main.asyncAfter(deadline: .now() + loadDelay) {
                                        if selectedTemplate != nil {
                                            print("WorkshopGridView - –û—Ç–æ–±—Ä–∞–∂–∞–µ–º detail view –¥–ª—è —à–∞–±–ª–æ–Ω–∞: \(templateCopy.title)")
                                            showingTemplateDetail = true
                                        } else {
                                            // –ï—Å–ª–∏ —à–∞–±–ª–æ–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–æ–≤—Ç–æ—Ä—è–µ–º –ø–æ–ø—ã—Ç–∫—É —Å –µ—â–µ –±–æ–ª—å—à–µ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
                                            selectedTemplate = templateCopy
                                            print("WorkshopGridView - –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å detail view")
                                            DispatchQueue.main.asyncAfter(deadline: .now() + 0.3) {
                                                showingTemplateDetail = true
                                            }
                                        }
                                    }
                                }
                            )
                        }
                    }
                    .padding()
                }
            }
        }
        .navigationTitle("–ú–∞—Å—Ç–µ—Ä—Å–∫–∞—è")
        .navigationBarTitleDisplayMode(.inline)
        .sheet(isPresented: $showingTemplateDetail) {
            if let template = selectedTemplate {
                templateDetailView(template)
                    .onDisappear {
                        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è
                        DispatchQueue.main.asyncAfter(deadline: .now() + 0.2) {
                            selectedTemplate = nil
                            
                            // –í—ã–≤–æ–¥–∏–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                            print("üîÑ WorkshopGridView - Sheet –∑–∞–∫—Ä—ã—Ç, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω: \(template.title)")
                            
                            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞, –µ—Å–ª–∏ —ç—Ç–æ –±—ã–ª —à–∞–±–ª–æ–Ω —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–µ—Ç–æ–∫—Å–∞
                            if template.title.contains("—Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–µ—Ç–æ–∫—Å–∞") || template.title.contains("digital detox") {
                                print("üîÑ WorkshopGridView - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–µ—Ç–æ–∫—Å–∞")
                                templateStore.preloadTemplateData(for: "digital-detox-7")
                            }
                        }
                    }
            } else {
                // –í–∏–¥ —Å –æ—à–∏–±–∫–æ–π, –µ—Å–ª–∏ —à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω
                VStack {
                    Image(systemName: "exclamationmark.triangle")
                        .font(.system(size: 50))
                        .foregroundColor(.yellow)
                        .padding()
                    
                    Text("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–∞")
                        .font(.headline)
                        .foregroundColor(AskezaTheme.textColor)
                    
                    Text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
                        .font(.subheadline)
                        .foregroundColor(AskezaTheme.secondaryTextColor)
                        .padding(.top, 8)
                    
                    Button("–ó–∞–∫—Ä—ã—Ç—å") {
                        showingTemplateDetail = false
                    }
                    .padding()
                    .background(AskezaTheme.buttonBackground)
                    .cornerRadius(8)
                    .padding(.top, 20)
                }
                .padding()
                .background(AskezaTheme.backgroundColor)
                .edgesIgnoringSafeArea(.all)
            }
        }
    }
    
    // MARK: - Helper Views and Properties
    
    private var templates: [PracticeTemplate] {
        return templateStore.filteredTemplates(
            category: selectedCategory,
            difficulty: selectedDifficulty,
            duration: selectedDuration,
            searchText: searchText
        )
    }
    
    private var emptyResultsView: some View {
        VStack(spacing: 16) {
            Image(systemName: "magnifyingglass")
                .font(.system(size: 50))
                .foregroundColor(AskezaTheme.secondaryTextColor)
            
            Text("–ù–µ—Ç —à–∞–±–ª–æ–Ω–æ–≤, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–∞–º")
                .font(AskezaTheme.bodyFont)
                .foregroundColor(AskezaTheme.secondaryTextColor)
                .multilineTextAlignment(.center)
            
            Button(action: clearFilters) {
                Text("–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã")
                    .font(.subheadline)
                    .fontWeight(.medium)
                    .foregroundColor(.white)
                    .padding(.horizontal, 16)
                    .padding(.vertical, 8)
                    .background(AskezaTheme.accentColor)
                    .cornerRadius(8)
            }
        }
        .padding()
        .background(AskezaTheme.buttonBackground)
        .cornerRadius(16)
        .padding(.horizontal)
    }
    
    private var hasActiveFilters: Bool {
        return selectedCategory != nil || selectedDifficulty != nil || selectedDuration != nil || !searchText.isEmpty
    }
    
    private var sectionTitle: String {
        var components: [String] = []
        
        if let category = selectedCategory {
            components.append(category.rawValue)
        }
        
        if let difficulty = selectedDifficulty {
            components.append("—Å–ª–æ–∂–Ω–æ—Å—Ç—å \(difficulty)")
        }
        
        if let duration = selectedDuration {
            if duration == 0 {
                components.append("–ø–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–µ")
            } else {
                components.append("\(duration) –¥–Ω–µ–π")
            }
        }
        
        return components.isEmpty ? "–í—Å–µ —à–∞–±–ª–æ–Ω—ã" : components.joined(separator: " ¬∑ ")
    }
    
    private func clearFilters() {
        selectedCategory = nil
        selectedDifficulty = nil
        selectedDuration = nil
        searchText = ""
    }
    
    private func templateDetailView(_ template: PracticeTemplate) -> some View {
        VStack {
            // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –µ—â–µ —Ä–∞–∑ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ sheet
            TemplateDetailView(
                template: template,
                templateStore: templateStore
            )
            .onAppear {
                // –ü—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ sheet, –µ—â–µ —Ä–∞–∑ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
                print("üîç WorkshopGridView - onAppear –≤—ã–∑–≤–∞–Ω –¥–ª—è sheet —Å —à–∞–±–ª–æ–Ω–æ–º: \(template.title)")
                
                // –ï—â–µ —Ä–∞–∑ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
                templateStore.preloadTemplateData(for: template.templateId)
                
                // –ü—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ digital-detox-7 –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
                if template.templateId == "digital-detox-7" || template.title.contains("—Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–µ—Ç–æ–∫—Å–∞") {
                    print("‚ö†Ô∏è WorkshopGridView - –û–±–Ω–∞—Ä—É–∂–µ–Ω –æ—Å–æ–±—ã–π —à–∞–±–ª–æ–Ω: —Ü–∏—Ñ—Ä–æ–≤–æ–π –¥–µ—Ç–æ–∫—Å")
                    
                    // –°–µ—Ä–∏—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫ —Å —É–≤–µ–ª–∏—á–∏–≤–∞—é—â–∏–º–∏—Å—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
                    DispatchQueue.main.asyncAfter(deadline: .now() + 0.2) {
                        print("üîÑ WorkshopGridView - –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ 1 –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–µ—Ç–æ–∫—Å–∞")
                        templateStore.preloadTemplateData(for: "digital-detox-7")
                        
                        DispatchQueue.main.asyncAfter(deadline: .now() + 0.3) {
                            print("üîÑ WorkshopGridView - –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ 2 –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–µ—Ç–æ–∫—Å–∞")
                            templateStore.preloadTemplateData(for: "digital-detox-7")
                            
                            // –¢—Ä–µ—Ç—å—è –ø–æ–ø—ã—Ç–∫–∞ —Å –µ—â–µ –±–æ–ª—å—à–µ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
                            DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) {
                                print("üîÑ WorkshopGridView - –§–∏–Ω–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–µ—Ç–æ–∫—Å–∞")
                                templateStore.preloadTemplateData(for: "digital-detox-7")
                            }
                        }
                    }
                }
            }
            .background(AskezaTheme.backgroundColor)
            .edgesIgnoringSafeArea(.all)
        }
    }
}

#Preview {
    let templateStore = PracticeTemplateStore.shared
    
    return WorkshopGridView(
        templateStore: templateStore,
        searchText: .constant(""),
        selectedCategory: .constant(nil),
        selectedDifficulty: .constant(nil),
        selectedDuration: .constant(nil)
    )
    .background(AskezaTheme.backgroundColor)
} 